{
    "extract_topic" : {
        "prefix": "extract the knowledge, field from the context into python list format\nContext:\nPreprocessing expands macros, pulls included source from header files, and strips off comments from source code: gcc -E source.c Assembly turns assembly language into machine code, except that any external function calls like printf are substituted with placeholders. Linking finally resolves the function calls by plugging in their actual addresses\nResult: [\"Gcc\", \"assembly\", \"machine code\", \"linking\"]\nContext:\n",
        "suffix": "\nResult:\n"
    },
    "split_document" : {
        "prefix": "Chunk the context to multiple paragraphs. Show exactly the paragraphs without modification, return the answer using this format [\"chunk a\",\"chunk b\",\"chunk c\"]. Do not use any line break between each chunk.\nContext:\n",
        "suffix": "\nResult:\n"
    },
    "rephrase_document" : {
        "prefix": "rephrase the context to make it easier to understand. The rephrased context should be written in simple and concise language that is suitable for a general audience, return the answer using this format [\"pharagraph 1\",\"pharagraph 2\",\"pharagraph 3\"]. Do not use any line break between each pharagraph.\nContext:\n",
        "suffix": "\nResult:\n"
    },
    "summarize" : {
        "prefix": "brief explanation the following context that is brief and easier to understand. The explanation should be written in simple and concise language that is suitable for a general audience",
        "suffix": "\nExplanation:\n"
    }
}